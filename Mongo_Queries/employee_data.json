mongosh "mongodb+srv://cluster0.wmwni.mongodb.net/" --apiVersion 1 --username admin

db.employees.insertMany([
    { "name": "Alice", "department": "IT", "salary": 60000, "remote": true, "joinedAt": new Date("2021-03-15") },
    { "name": "Bob", "department": "HR", "salary": 50000, "remote": false, "joinedAt": new Date("2019-07-10") },
    { "name": "Charlie", "department": "Finance", "salary": 70000, "remote": true, "joinedAt": new Date("2022-01-25") },
    { "name": "David", "department": "IT", "salary": 80000, "remote": false, "joinedAt": new Date("2020-06-20"), "address": { "city": "New York", "zip": "10001" } },
    { "name": "Emma", "department": "HR", "salary": 55000, "remote": true, "joinedAt": new Date("2018-12-05") },
    { "name": "Sophia", "department": "Finance", "salary": 75000, "remote": false, "joinedAt": new Date("2017-09-12"), "address": { "city": "Chicago", "zip": "60601" } },
    { "name": "Liam", "department": "IT", "salary": 90000, "remote": true, "joinedAt": new Date("2016-05-18"), "projects": [ { "name": "Project A", "deadline": "2024-06-01" }, { "name": "Project B", "deadline": "2024-12-15" } ] },
    { "name": "Michael", "department": "HR", "salary": 48000, "remote": false, "joinedAt": new Date("2023-02-10") },
    { "name": "Olivia", "department": "Finance", "salary": 68000, "remote": true, "joinedAt": new Date("2015-11-22") },
    { "name": "Noah", "department": "IT", "salary": 95000, "remote": false, "joinedAt": new Date("2014-08-30"), "projects": [ { "name": "Project X", "deadline": "2025-03-20" } ] },
    { "name": "Isabella", "department": "HR", "salary": 53000, "remote": false, "joinedAt": new Date("2022-04-15") },
    { "name": "William", "department": "Finance", "salary": 72000, "remote": true, "joinedAt": new Date("2013-06-25") },
    { "name": "James", "department": "IT", "salary": 88000, "remote": false, "joinedAt": new Date("2020-01-05") },
    { "name": "Benjamin", "department": "HR", "salary": 54000, "remote": true, "joinedAt": new Date("2018-07-30") },
    { "name": "Charlotte", "department": "Finance", "salary": 77000, "remote": false, "joinedAt": new Date("2016-02-14"), "address": { "city": "Los Angeles", "zip": "90001" } }
]);


// find employees who are in the "IT" department AND either have a salary greater than $80,000 OR are working on "Project B"
db.employees.find({
    "$and": [
        { "department": "IT" },
        {
            "$or": [
                { "salary": { "$gt": 80000 } },
                { "projects.name": "Project B" }
            ]
        }
    ]
});

//Find employees who are either in the "IT" department OR working on "Project A":
db.employees.find({
    "$or": [
        { "department": "IT" },
        { "projects.name": "Project A" }
    ]
});

//Find employees who are working remotely AND working on "Project A"
db.employees.find({
    "$and": [
        { "remote": true },
        { "projects.name": "Project A" }
    ]
});

//Find employees who are in the "IT" department AND have a salary greater than $80,000:
db.employees.find({
    "$and": [
        { "department": "IT" },
        { "salary": { "$gt": 80000 } }
    ]
});

//Find Employees Who Have at Least One Project
db.employees.find({
    "projects": { "$exists": true, "$not": { "$size": 0 } }
});

//Find employees who are working on both "Project A" and "Project B":
db.employees.find({
    "projects.name": { "$all": ["Project A", "Project B"] }
});

//Find Employees in Either New York OR Chicago
db.employees.find({
    "$or": [
        { "address.city": "New York" },
        { "address.city": "Chicago" }
    ]
});

//Find Employees with a ZIP Code Starting with "90"

db.employees.find({ "address.zip": { "$regex": "^90" } });

//Delete the employee with the name "Alice":
db.employees.deleteOne({ "name": "Alice" });

//Delete all employees in the "HR" department:
db.employees.deleteMany({ "department": "HR" });

// Update one. Update employee department 

db.employees.updateOne(
    { "name": "James" }, 
    { "$set": { "department": "Engineering" } }  // Update department
);

// updateMany(). Increase salary by 10% for all employees in the "Finance" department.

db.employees.updateMany(
    { "department": "Finance" }, 
    { "$mul": { "salary": 1.10 } }
);

// updateMany(). Add "workSetup": "Remote" to all employees where remote: true.

db.employees.updateMany(
    { "remote": true }, 
    { "$set": { "workSetup": "Remote" } } 
);

//updateMany(). Add a new project "Project Z" to all IT employees who have existing projects.

db.employees.updateMany(
    { "department": "IT", "projects": { "$exists": true } }, 
    { "$push": { "projects": { "name": "Project Z", "deadline": "2025-08-15" } } } 
);

//Upsert Example
db.employees.updateOne(
    { "name": "Aliyul Rahman" }, 
    { 
        "$setOnInsert": {  
            "department": "IT",
            "remote": false,
            "salary": 60000,  
            "joinedAt": new Date()
        }
    },
    { "upsert": true } 
);

db.employees.updateOne(
    { "name": "Aliyul Rahman" },  // Find
    { 
        "$inc": { "salary": 5000 },  // Only modify salary if Aliyul exists
        "$setOnInsert": {   // If Aliyul does not exist, insert with these fields
            "department": "IT",
            "remote": false,
            "joinedAt": new Date()
        }
    },
    { "upsert": true }  // Enable upsert (insert if not found)
);

//equal
db.employees.find({ department: { $eq: "IT" } });

db.employees.find({ $eq: {department: "IT"} });

//Not equal
db.employees.find({ department: { $ne: "HR" } });

//Greater than equal
db.employees.find({ salary: { $gte: 70000 } });

//less than
db.employees.find({ joinedAt: { $lt: new Date("2020-01-01") } });

// less than equal
db.employees.find({ salary: { $lte: 50000 } });

//In
db.employees.find({ department: { $in: ["IT", "Finance"] } });

//Not in
db.employees.find({ department: { $nin: ["IT", "Finance"] } });


//$currentDate - Set a field to the current date
db.employees.updateOne(
    { name: "Mohamad" },
    { $currentDate: { joinedAt: true } }
);

//$inc - Increment a field's value
db.employees.updateOne(
    { name: "Mohamad" },
    { $inc: { salary: 5000 } }
);

// $rename - Rename a field
db.employees.updateMany(
    {},
    { $rename: { department: "dept" } }
);

//$unset - Remove a field
db.employees.updateOne(
    { name: "David" },
    { $unset: { address: "" } }
);

//$addToSet - Add distinct elements to an array

db.employees.updateOne(
    { name: "Liam" },
    { $addToSet: { projects: { name: "Project C", deadline: "2025-06-01" } } }
);

// $pop - Remove first or last element of an array

db.employees.updateOne(
    { name: "Noah" },
    { $pop: { projects: 1 } }
);

//$pull - Remove elements matching a condition

db.employees.updateOne(
    { name: "Liam" },
    { $pull: { projects: { name: "Project A" } } }
);

//$push - Add an element to an array

db.employees.updateOne(
    { name: "Sophia" },
    { $push: { projects: { name: "Project D", deadline: "2025-08-20" } } }
);

